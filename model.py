# generated by datamodel-codegen:
#   filename:  swagger.json
#   timestamp: 2023-04-24T09:49:52+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Id(BaseModel):
    type: str


class Name(BaseModel):
    type: str


class Description(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class DropAble(BaseModel):
    type: str


class CreatedAt(BaseModel):
    type: str


class UpdatedAt(BaseModel):
    type: str


class Properties(BaseModel):
    id: Id
    name: Name
    description: Description
    drop_able: DropAble
    created_at: CreatedAt
    updated_at: UpdatedAt


class Realm(BaseModel):
    properties: Properties
    required: List[str]
    type: str


class NameLocked(BaseModel):
    type: str


class FirstName(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class LastName(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class DisplayName(BaseModel):
    type: str


class Email(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Password(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Avatar(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Cover(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class ResetHash(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class ResetAt(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class ResetExpires(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Status(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class StatusMessage(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Active(BaseModel):
    type: str


class ActivateHash(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class CreatedAt1(BaseModel):
    type: str
    format: str


class UpdatedAt1(BaseModel):
    type: str
    format: str


class RealmId(BaseModel):
    type: str


class Realm1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties1(BaseModel):
    id: Id
    name: Name
    name_locked: NameLocked
    first_name: FirstName
    last_name: LastName
    display_name: DisplayName
    email: Email
    password: Password
    avatar: Avatar
    cover: Cover
    reset_hash: ResetHash
    reset_at: ResetAt
    reset_expires: ResetExpires
    status: Status
    status_message: StatusMessage
    active: Active
    activate_hash: ActivateHash
    created_at: CreatedAt1
    updated_at: UpdatedAt1
    realm_id: RealmId
    realm: Realm1


class User(BaseModel):
    properties: Properties1
    required: List[str]
    type: str
    additionalProperties: bool


class Secret(BaseModel):
    type: str


class RedirectUri(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class GrantTypes(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Scope(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class BaseUrl(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')
    description: str


class RootUrl(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')
    description: str


class IsConfidential(BaseModel):
    type: str


class CreatedAt2(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class UpdatedAt2(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class UserId(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class User1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties2(BaseModel):
    id: Id
    name: Name
    description: Description
    secret: Secret
    redirect_uri: RedirectUri
    grant_types: GrantTypes
    scope: Scope
    base_url: BaseUrl
    root_url: RootUrl
    is_confidential: IsConfidential
    created_at: CreatedAt2
    updated_at: UpdatedAt2
    realm_id: RealmId
    realm: Realm1
    user_id: UserId
    user: User1


class Client(BaseModel):
    properties: Properties2
    required: List[str]
    type: str


class BuiltIn(BaseModel):
    type: str


class RealmId2(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Properties3(BaseModel):
    id: Id
    built_in: BuiltIn
    name: Name
    description: Description
    realm_id: RealmId2
    realm: Realm1
    created_at: CreatedAt2
    updated_at: UpdatedAt2


class Scope1(BaseModel):
    properties: Properties3
    required: List[str]
    type: str


class Default(BaseModel):
    type: str


class ClientId(BaseModel):
    type: str


class Client1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ScopeId(BaseModel):
    type: str


class Scope2(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties4(BaseModel):
    id: Id
    default: Default
    client_id: ClientId
    client: Client1
    scope_id: ScopeId
    scope: Scope2


class ClientScope(BaseModel):
    properties: Properties4
    required: List[str]
    type: str


class Properties5(BaseModel):
    id: Id
    default: Default
    client_id: ClientId
    client: Client1
    scope_id: ScopeId
    scope: Scope2


class PickClientScopeClientidscopeid(BaseModel):
    properties: Properties5
    required: List[str]
    type: str


class Description3(BaseModel):
    type: str


class CreatedAt4(BaseModel):
    type: str
    format: str


class UpdatedAt4(BaseModel):
    type: str
    format: str


class RealmId3(BaseModel):
    type: str


class Properties6(BaseModel):
    id: Id
    secret: Secret
    name: Name
    description: Description3
    active: Active
    created_at: CreatedAt4
    updated_at: UpdatedAt4
    user_id: UserId
    user: User1
    realm_id: RealmId3
    realm: Realm1


class Robot(BaseModel):
    properties: Properties6
    required: List[str]
    type: str


class Properties7(BaseModel):
    id: Id
    secret: Secret
    name: Name
    description: Description3
    active: Active
    created_at: CreatedAt4
    updated_at: UpdatedAt4
    user_id: UserId
    user: User1
    realm_id: RealmId3
    realm: Realm1


class PickRobotName(BaseModel):
    properties: Properties7
    required: List[str]
    type: str


class Target(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Description5(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class RealmId5(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class CreatedAt6(BaseModel):
    type: str


class UpdatedAt6(BaseModel):
    type: str


class Properties8(BaseModel):
    id: Id
    name: Name
    target: Target
    description: Description5
    realm_id: RealmId5
    realm: Realm1
    created_at: CreatedAt6
    updated_at: UpdatedAt6


class Role(BaseModel):
    properties: Properties8
    required: List[str]
    type: str


class Slug(BaseModel):
    type: str


class Protocol(BaseModel):
    type: str
    enum: List[str]
    x_nullable: bool = Field(..., alias='x-nullable')


class ProtocolConfig(BaseModel):
    type: str
    enum: List[Optional[str]]
    x_nullable: bool = Field(..., alias='x-nullable')


class Enabled(BaseModel):
    type: str


class CreatedAt7(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class UpdatedAt7(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class RealmId6(BaseModel):
    type: str


class Properties9(BaseModel):
    id: Id
    name: Name
    slug: Slug
    protocol: Protocol
    protocol_config: ProtocolConfig
    enabled: Enabled
    created_at: CreatedAt7
    updated_at: UpdatedAt7
    realm_id: RealmId6
    realm: Realm1


class IdentityProvider(BaseModel):
    properties: Properties9
    required: List[str]
    type: str


class ExternalId(BaseModel):
    type: str


class CreatedAt8(BaseModel):
    type: str
    format: str


class UpdatedAt8(BaseModel):
    type: str
    format: str


class RoleId(BaseModel):
    type: str


class Role1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class RoleRealmId(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class RoleRealm(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ProviderId(BaseModel):
    type: str


class Provider(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ProviderRealmId(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class ProviderRealm(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties10(BaseModel):
    id: Id
    external_id: ExternalId
    created_at: CreatedAt8
    updated_at: UpdatedAt8
    role_id: RoleId
    role: Role1
    role_realm_id: RoleRealmId
    role_realm: RoleRealm
    provider_id: ProviderId
    provider: Provider
    provider_realm_id: ProviderRealmId
    provider_realm: ProviderRealm


class IdentityProviderRole(BaseModel):
    properties: Properties10
    required: List[str]
    type: str


class Properties11(BaseModel):
    id: Id
    external_id: ExternalId
    created_at: CreatedAt8
    updated_at: UpdatedAt8
    role_id: RoleId
    role: Role1
    role_realm_id: RoleRealmId
    role_realm: RoleRealm
    provider_id: ProviderId
    provider: Provider
    provider_realm_id: ProviderRealmId
    provider_realm: ProviderRealm


class NonNullableIdentityProviderRole(BaseModel):
    properties: Properties11
    required: List[str]
    type: str


class CreatedAt10(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class UpdatedAt10(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Properties12(BaseModel):
    id: Id
    name: Name
    slug: Slug
    protocol: Protocol
    protocol_config: ProtocolConfig
    enabled: Enabled
    created_at: CreatedAt10
    updated_at: UpdatedAt10
    realm_id: RealmId6
    realm: Realm1


class NonNullableIdentityProvider(BaseModel):
    properties: Properties12
    required: List[str]
    type: str


class RealmId8(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class CreatedAt11(BaseModel):
    type: str
    format: str


class UpdatedAt11(BaseModel):
    type: str
    format: str


class Properties13(BaseModel):
    id: Id
    built_in: BuiltIn
    name: Name
    description: Description5
    target: Target
    realm_id: RealmId8
    realm: Realm1
    created_at: CreatedAt11
    updated_at: UpdatedAt11


class Permission(BaseModel):
    properties: Properties13
    required: List[str]
    type: str


class Properties14(BaseModel):
    id: Id
    built_in: BuiltIn
    name: Name
    description: Description5
    target: Target
    realm_id: RealmId8
    realm: Realm1
    created_at: CreatedAt11
    updated_at: UpdatedAt11


class NonNullablePermission(BaseModel):
    properties: Properties14
    required: List[str]
    type: str


class CreatedAt13(BaseModel):
    type: str


class UpdatedAt13(BaseModel):
    type: str


class Properties15(BaseModel):
    id: Id
    name: Name
    description: Description5
    drop_able: DropAble
    created_at: CreatedAt13
    updated_at: UpdatedAt13


class NonNullableRealm(BaseModel):
    properties: Properties15
    required: List[str]
    type: str


class UserinfoEndpoint(BaseModel):
    type: str
    description: str


class ServiceDocumentation(BaseModel):
    type: str
    description: str


class RegistrationEndpoint(BaseModel):
    type: str
    description: str


class RevocationEndpoint(BaseModel):
    type: str
    description: str


class IntrospectionEndpoint(BaseModel):
    type: str
    description: str


class TokenEndpoint(BaseModel):
    type: str
    description: str


class Items(BaseModel):
    type: str


class IdTokenSigningAlgValuesSupported(BaseModel):
    type: str
    items: Items
    description: str


class SubjectTypesSupported(BaseModel):
    type: str
    items: Items
    description: str


class Items2(BaseModel):
    type: str
    enum: List[str]
    x_nullable: bool = Field(..., alias='x-nullable')


class ResponseTypeSupported(BaseModel):
    type: str
    items: Items2
    description: str


class JwksUri(BaseModel):
    type: str
    description: str


class AuthorizationEndpoint(BaseModel):
    type: str
    description: str


class Issuer(BaseModel):
    type: str
    description: str


class Properties16(BaseModel):
    userinfo_endpoint: UserinfoEndpoint
    service_documentation: ServiceDocumentation
    registration_endpoint: RegistrationEndpoint
    revocation_endpoint: RevocationEndpoint
    introspection_endpoint: IntrospectionEndpoint
    token_endpoint: TokenEndpoint
    id_token_signing_alg_values_supported: IdTokenSigningAlgValuesSupported
    subject_types_supported: SubjectTypesSupported
    response_type_supported: ResponseTypeSupported
    jwks_uri: JwksUri
    authorization_endpoint: AuthorizationEndpoint
    issuer: Issuer


class OAuth2OpenIDProviderMetadata(BaseModel):
    properties: Properties16
    required: List[str]
    type: str


class Y(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class X(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Qi(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Q(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class P(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class N(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Kty(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class K(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class E(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Dq(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Dp(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class D(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Crv(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Kid(BaseModel):
    type: str


class Alg(BaseModel):
    type: str


class Properties17(BaseModel):
    y: Y
    x: X
    qi: Qi
    q: Q
    p: P
    n: N
    kty: Kty
    k: K
    e: E
    dq: Dq
    dp: Dp
    d: D
    crv: Crv
    kid: Kid
    alg: Alg


class AdditionalProperties(BaseModel):
    additionalProperties: bool


class OAuth2JsonWebKey(BaseModel):
    properties: Properties17
    additionalProperties: AdditionalProperties
    required: List[str]
    type: str


class Properties18(BaseModel):
    id: Id
    name: Name
    target: Target
    description: Description5
    realm_id: RealmId8
    realm: Realm1
    created_at: CreatedAt13
    updated_at: UpdatedAt13


class PickRoleName(BaseModel):
    properties: Properties18
    required: List[str]
    type: str


class Power(BaseModel):
    type: str
    format: str


class Condition(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Fields(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Negation(BaseModel):
    type: str


class PermissionId(BaseModel):
    type: str


class Permission1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class PermissionRealmId(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class PermissionRealm(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class CreatedAt15(BaseModel):
    type: str
    format: str


class UpdatedAt15(BaseModel):
    type: str
    format: str


class Properties19(BaseModel):
    power: Power
    condition: Condition
    fields: Fields
    negation: Negation
    target: Target
    permission_id: PermissionId
    permission: Permission1
    permission_realm_id: PermissionRealmId
    permission_realm: PermissionRealm
    id: Id
    created_at: CreatedAt15
    updated_at: UpdatedAt15
    role_id: RoleId
    role: Role1
    role_realm_id: RoleRealmId
    role_realm: RoleRealm


class RolePermission(BaseModel):
    properties: Properties19
    required: List[str]
    type: str


class Properties20(BaseModel):
    permission_id: PermissionId
    id: Id
    created_at: CreatedAt15
    updated_at: UpdatedAt15
    role_id: RoleId
    role: Role1
    role_realm_id: RoleRealmId
    role_realm: RoleRealm


class PickRolePermissionRoleidpermissionid(BaseModel):
    properties: Properties20
    required: List[str]
    type: str


class CreatedAt17(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class UpdatedAt17(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Properties21(BaseModel):
    id: Id
    built_in: BuiltIn
    name: Name
    description: Description5
    realm_id: RealmId8
    realm: Realm1
    created_at: CreatedAt17
    updated_at: UpdatedAt17


class PickScopeName(BaseModel):
    properties: Properties21
    required: List[str]
    type: str


class CreatedAt18(BaseModel):
    type: str
    format: str


class UpdatedAt18(BaseModel):
    type: str
    format: str


class RealmId12(BaseModel):
    type: str


class Properties22(BaseModel):
    id: Id
    name: Name
    name_locked: NameLocked
    first_name: FirstName
    last_name: LastName
    display_name: DisplayName
    email: Email
    password: Password
    avatar: Avatar
    cover: Cover
    reset_hash: ResetHash
    reset_at: ResetAt
    reset_expires: ResetExpires
    status: Status
    status_message: StatusMessage
    active: Active
    activate_hash: ActivateHash
    created_at: CreatedAt18
    updated_at: UpdatedAt18
    realm_id: RealmId12
    realm: Realm1


class NonNullableUser(BaseModel):
    properties: Properties22
    required: List[str]
    type: str
    additionalProperties: bool


class UserId3(BaseModel):
    type: str


class UserRealmId(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class UserRealm(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class CreatedAt19(BaseModel):
    type: str


class UpdatedAt19(BaseModel):
    type: str


class Properties23(BaseModel):
    id: Id
    role_id: RoleId
    role: Role1
    role_realm_id: RoleRealmId
    role_realm: RoleRealm
    user_id: UserId3
    user: User1
    user_realm_id: UserRealmId
    user_realm: UserRealm
    created_at: CreatedAt19
    updated_at: UpdatedAt19


class UserRole(BaseModel):
    properties: Properties23
    required: List[str]
    type: str


class Properties24(BaseModel):
    id: Id
    role_id: RoleId
    role: Role1
    role_realm_id: RoleRealmId
    role_realm: RoleRealm
    user_id: UserId3
    user: User1
    user_realm_id: UserRealmId
    user_realm: UserRealm
    created_at: CreatedAt19
    updated_at: UpdatedAt19


class PickUserRoleRoleiduserid(BaseModel):
    properties: Properties24
    required: List[str]
    type: str


class Scope4(BaseModel):
    type: str


class MacAlgorithm(BaseModel):
    type: str


class MacKey(BaseModel):
    type: str


class IdToken(BaseModel):
    type: str


class TokenType(BaseModel):
    type: str


class ExpiresIn(BaseModel):
    type: str
    format: str


class RefreshToken(BaseModel):
    type: str


class AccessToken(BaseModel):
    type: str


class Properties25(BaseModel):
    scope: Scope4
    mac_algorithm: MacAlgorithm
    mac_key: MacKey
    id_token: IdToken
    token_type: TokenType
    expires_in: ExpiresIn
    refresh_token: RefreshToken
    access_token: AccessToken


class OAuth2TokenGrantResponse(BaseModel):
    properties: Properties25
    required: List[str]
    type: str


class Timestamp(BaseModel):
    type: str
    format: str


class Version(BaseModel):
    type: str


class Properties26(BaseModel):
    timestamp: Timestamp
    version: Version


class EndpointInfo(BaseModel):
    properties: Properties26
    required: List[str]
    type: str


class CreatedAt21(BaseModel):
    type: str
    format: str


class UpdatedAt21(BaseModel):
    type: str
    format: str


class RobotId(BaseModel):
    type: str


class Robot1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class RobotRealmId(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class RobotRealm(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties27(BaseModel):
    power: Power
    condition: Condition
    fields: Fields
    negation: Negation
    target: Target
    permission_id: PermissionId
    permission: Permission1
    permission_realm_id: PermissionRealmId
    permission_realm: PermissionRealm
    id: Id
    created_at: CreatedAt21
    updated_at: UpdatedAt21
    robot_id: RobotId
    robot: Robot1
    robot_realm_id: RobotRealmId
    robot_realm: RobotRealm


class RobotPermission(BaseModel):
    properties: Properties27
    required: List[str]
    type: str


class Properties28(BaseModel):
    permission_id: PermissionId
    id: Id
    created_at: CreatedAt21
    updated_at: UpdatedAt21
    robot_id: RobotId
    robot: Robot1
    robot_realm_id: RobotRealmId
    robot_realm: RobotRealm


class PickRobotPermissionRobotidpermissionid(BaseModel):
    properties: Properties28
    required: List[str]
    type: str


class CreatedAt23(BaseModel):
    type: str


class UpdatedAt23(BaseModel):
    type: str


class Properties29(BaseModel):
    id: Id
    robot_id: RobotId
    role_id: RoleId
    role: Role1
    role_realm_id: RoleRealmId
    role_realm: RoleRealm
    robot: Robot1
    robot_realm_id: RobotRealmId
    robot_realm: RobotRealm
    created_at: CreatedAt23
    updated_at: UpdatedAt23


class RobotRole(BaseModel):
    properties: Properties29
    required: List[str]
    type: str


class Properties30(BaseModel):
    id: Id
    robot_id: RobotId
    role_id: RoleId
    role: Role1
    role_realm_id: RoleRealmId
    role_realm: RoleRealm
    robot: Robot1
    robot_realm_id: RobotRealmId
    robot_realm: RobotRealm
    created_at: CreatedAt23
    updated_at: UpdatedAt23


class PickRobotRoleRoleidrobotid(BaseModel):
    properties: Properties30
    required: List[str]
    type: str


class CreatedAt25(BaseModel):
    type: str
    format: str


class UpdatedAt25(BaseModel):
    type: str
    format: str


class Properties31(BaseModel):
    power: Power
    condition: Condition
    fields: Fields
    negation: Negation
    target: Target
    permission_id: PermissionId
    permission: Permission1
    permission_realm_id: PermissionRealmId
    permission_realm: PermissionRealm
    id: Id
    created_at: CreatedAt25
    updated_at: UpdatedAt25
    user_id: UserId3
    user: User1
    user_realm_id: UserRealmId
    user_realm: UserRealm


class UserPermission(BaseModel):
    properties: Properties31
    required: List[str]
    type: str


class Properties32(BaseModel):
    permission_id: PermissionId
    id: Id
    created_at: CreatedAt25
    updated_at: UpdatedAt25
    user_id: UserId3
    user: User1
    user_realm_id: UserRealmId
    user_realm: UserRealm


class PickUserPermissionUseridpermissionid(BaseModel):
    properties: Properties32
    required: List[str]
    type: str


class Value(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class RealmId13(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class CreatedAt27(BaseModel):
    type: str


class UpdatedAt27(BaseModel):
    type: str


class Properties33(BaseModel):
    id: Id
    name: Name
    value: Value
    role_id: RoleId
    role: Role1
    realm_id: RealmId13
    realm: Realm1
    created_at: CreatedAt27
    updated_at: UpdatedAt27


class RoleAttribute(BaseModel):
    properties: Properties33
    required: List[str]
    type: str


class Properties34(BaseModel):
    id: Id
    name: Name
    value: Value
    role_id: RoleId
    role: Role1
    realm_id: RealmId13
    realm: Realm1
    created_at: CreatedAt27
    updated_at: UpdatedAt27


class NonNullableRoleAttribute(BaseModel):
    properties: Properties34
    required: List[str]
    type: str


class RealmId15(BaseModel):
    type: str


class Properties35(BaseModel):
    id: Id
    name: Name
    value: Value
    user_id: UserId3
    user: User1
    realm_id: RealmId15
    realm: Realm1
    created_at: CreatedAt27
    updated_at: UpdatedAt27


class UserAttribute(BaseModel):
    properties: Properties35
    required: List[str]
    type: str


class Properties36(BaseModel):
    id: Id
    name: Name
    value: Value
    user_id: UserId3
    user: User1
    realm_id: RealmId15
    realm: Realm1
    created_at: CreatedAt27
    updated_at: UpdatedAt27


class NonNullableUserAttribute(BaseModel):
    properties: Properties36
    required: List[str]
    type: str


class Scope5(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class CreatedAt31(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class UpdatedAt31(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class UserId9(BaseModel):
    type: str
    x_nullable: bool = Field(..., alias='x-nullable')


class Properties37(BaseModel):
    id: Id
    name: Name
    description: Description5
    secret: Secret
    redirect_uri: RedirectUri
    grant_types: GrantTypes
    scope: Scope5
    base_url: BaseUrl
    root_url: RootUrl
    is_confidential: IsConfidential
    created_at: CreatedAt31
    updated_at: UpdatedAt31
    realm_id: RealmId15
    realm: Realm1
    user_id: UserId9
    user: User1


class NonNullableClient(BaseModel):
    properties: Properties37
    required: List[str]
    type: str


class Definitions(BaseModel):
    Realm: Realm
    User: User
    Client: Client
    Scope: Scope1
    ClientScope: ClientScope
    PickClientScope_clientidscopeid: PickClientScopeClientidscopeid = Field(
        ..., alias='PickClientScope.clientidscopeid'
    )
    Robot: Robot
    PickRobot_name: PickRobotName = Field(..., alias='PickRobot.name')
    Role: Role
    IdentityProvider: IdentityProvider
    IdentityProviderRole: IdentityProviderRole
    NonNullableIdentityProviderRole: NonNullableIdentityProviderRole
    NonNullableIdentityProvider: NonNullableIdentityProvider
    Permission: Permission
    NonNullablePermission: NonNullablePermission
    NonNullableRealm: NonNullableRealm
    OAuth2OpenIDProviderMetadata: OAuth2OpenIDProviderMetadata
    OAuth2JsonWebKey: OAuth2JsonWebKey
    PickRole_name: PickRoleName = Field(..., alias='PickRole.name')
    RolePermission: RolePermission
    PickRolePermission_roleidpermissionid: PickRolePermissionRoleidpermissionid = Field(
        ..., alias='PickRolePermission.roleidpermissionid'
    )
    PickScope_name: PickScopeName = Field(..., alias='PickScope.name')
    NonNullableUser: NonNullableUser
    UserRole: UserRole
    PickUserRole_roleiduserid: PickUserRoleRoleiduserid = Field(
        ..., alias='PickUserRole.roleiduserid'
    )
    OAuth2TokenGrantResponse: OAuth2TokenGrantResponse
    EndpointInfo: EndpointInfo
    RobotPermission: RobotPermission
    PickRobotPermission_robotidpermissionid: PickRobotPermissionRobotidpermissionid = (
        Field(..., alias='PickRobotPermission.robotidpermissionid')
    )
    RobotRole: RobotRole
    PickRobotRole_roleidrobotid: PickRobotRoleRoleidrobotid = Field(
        ..., alias='PickRobotRole.roleidrobotid'
    )
    UserPermission: UserPermission
    PickUserPermission_useridpermissionid: PickUserPermissionUseridpermissionid = Field(
        ..., alias='PickUserPermission.useridpermissionid'
    )
    RoleAttribute: RoleAttribute
    NonNullableRoleAttribute: NonNullableRoleAttribute
    UserAttribute: UserAttribute
    NonNullableUserAttribute: NonNullableUserAttribute
    NonNullableClient: NonNullableClient


class Info(BaseModel):
    title: str
    version: str
    description: str


class Items3(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Schema(BaseModel):
    type: str
    items: Items3


class Field200(BaseModel):
    description: str
    schema_: Schema = Field(..., alias='schema')


class Responses(BaseModel):
    field_200: Field200 = Field(..., alias='200')


class Get(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses
    security: List
    tags: List[str]
    parameters: List


class Schema1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field2001(BaseModel):
    description: str
    schema_: Schema1 = Field(..., alias='schema')


class Responses1(BaseModel):
    field_200: Field2001 = Field(..., alias='200')


class Parameter(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema1 = Field(..., alias='schema')


class Post(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses1
    security: List
    tags: List[str]
    parameters: List[Parameter]


class FieldClientScopes(BaseModel):
    get: Get
    post: Post


class Field2002(BaseModel):
    description: str
    schema_: Schema1 = Field(..., alias='schema')


class Responses2(BaseModel):
    field_200: Field2002 = Field(..., alias='200')


class Parameter1(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get1(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses2
    security: List
    tags: List[str]
    parameters: List[Parameter1]


class Field2003(BaseModel):
    description: str
    schema_: Schema1 = Field(..., alias='schema')


class Responses3(BaseModel):
    field_200: Field2003 = Field(..., alias='200')


class Delete(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses3
    security: List
    tags: List[str]
    parameters: List[Parameter1]


class FieldClientScopesId(BaseModel):
    get: Get1
    delete: Delete


class Schema5(BaseModel):
    type: str
    items: Items3


class Field2004(BaseModel):
    description: str
    schema_: Schema5 = Field(..., alias='schema')


class Responses4(BaseModel):
    field_200: Field2004 = Field(..., alias='200')


class Get2(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses4
    security: List
    tags: List[str]
    parameters: List


class Schema6(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field2005(BaseModel):
    description: str
    schema_: Schema6 = Field(..., alias='schema')


class Responses5(BaseModel):
    field_200: Field2005 = Field(..., alias='200')


class Parameter3(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema6 = Field(..., alias='schema')


class Post1(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses5
    security: List
    tags: List[str]
    parameters: List[Parameter3]


class FieldRobots(BaseModel):
    get: Get2
    post: Post1


class Field2006(BaseModel):
    description: str
    schema_: Schema6 = Field(..., alias='schema')


class Responses6(BaseModel):
    field_200: Field2006 = Field(..., alias='200')


class Parameter4(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get3(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses6
    security: List
    tags: List[str]
    parameters: List[Parameter4]


class FieldRobotsIdIntegrity(BaseModel):
    get: Get3


class Field2007(BaseModel):
    description: str
    schema_: Schema6 = Field(..., alias='schema')


class Responses7(BaseModel):
    field_200: Field2007 = Field(..., alias='200')


class Get4(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses7
    security: List
    tags: List[str]
    parameters: List[Parameter4]


class Field2008(BaseModel):
    description: str
    schema_: Schema6 = Field(..., alias='schema')


class Responses8(BaseModel):
    field_200: Field2008 = Field(..., alias='200')


class Parameter6(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema6] = Field(None, alias='schema')


class Post2(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses8
    security: List
    tags: List[str]
    parameters: List[Parameter6]


class Field2009(BaseModel):
    description: str
    schema_: Schema6 = Field(..., alias='schema')


class Responses9(BaseModel):
    field_200: Field2009 = Field(..., alias='200')


class Parameter7(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete1(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses9
    security: List
    tags: List[str]
    parameters: List[Parameter7]


class FieldRobotsId(BaseModel):
    get: Get4
    post: Post2
    delete: Delete1


class Schema13(BaseModel):
    type: str
    items: Items3


class Field20010(BaseModel):
    description: str
    schema_: Schema13 = Field(..., alias='schema')


class Responses10(BaseModel):
    field_200: Field20010 = Field(..., alias='200')


class Get5(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses10
    security: List
    tags: List[str]
    parameters: List


class Schema14(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20011(BaseModel):
    description: str
    schema_: Schema14 = Field(..., alias='schema')


class Responses11(BaseModel):
    field_200: Field20011 = Field(..., alias='200')


class Parameter8(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema14 = Field(..., alias='schema')


class Post3(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses11
    security: List
    tags: List[str]
    parameters: List[Parameter8]


class FieldIdentityProviderRoles(BaseModel):
    get: Get5
    post: Post3


class Field20012(BaseModel):
    description: str
    schema_: Schema14 = Field(..., alias='schema')


class Responses12(BaseModel):
    field_200: Field20012 = Field(..., alias='200')


class Parameter9(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get6(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses12
    security: List
    tags: List[str]
    parameters: List[Parameter9]


class Field20013(BaseModel):
    description: str
    schema_: Schema14 = Field(..., alias='schema')


class Responses13(BaseModel):
    field_200: Field20013 = Field(..., alias='200')


class Parameter10(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema14] = Field(None, alias='schema')


class Post4(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses13
    security: List
    tags: List[str]
    parameters: List[Parameter10]


class Field20014(BaseModel):
    description: str
    schema_: Schema14 = Field(..., alias='schema')


class Responses14(BaseModel):
    field_200: Field20014 = Field(..., alias='200')


class Parameter11(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete2(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses14
    security: List
    tags: List[str]
    parameters: List[Parameter11]


class FieldIdentityProviderRolesId(BaseModel):
    get: Get6
    post: Post4
    delete: Delete2


class Schema20(BaseModel):
    type: str
    items: Items3


class Field20015(BaseModel):
    description: str
    schema_: Schema20 = Field(..., alias='schema')


class Responses15(BaseModel):
    field_200: Field20015 = Field(..., alias='200')


class Get7(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses15
    security: List
    tags: List[str]
    parameters: List


class Schema21(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20016(BaseModel):
    description: str
    schema_: Schema21 = Field(..., alias='schema')


class Responses16(BaseModel):
    field_200: Field20016 = Field(..., alias='200')


class Parameter12(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema21 = Field(..., alias='schema')


class Post5(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses16
    security: List
    tags: List[str]
    parameters: List[Parameter12]


class FieldIdentityProviders(BaseModel):
    get: Get7
    post: Post5


class Field20017(BaseModel):
    description: str
    schema_: Schema21 = Field(..., alias='schema')


class Responses17(BaseModel):
    field_200: Field20017 = Field(..., alias='200')


class Parameter13(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get8(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses17
    security: List
    tags: List[str]
    parameters: List[Parameter13]


class Field20018(BaseModel):
    description: str
    schema_: Schema21 = Field(..., alias='schema')


class Responses18(BaseModel):
    field_200: Field20018 = Field(..., alias='200')


class Parameter14(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema21] = Field(None, alias='schema')


class Post6(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses18
    security: List
    tags: List[str]
    parameters: List[Parameter14]


class Field20019(BaseModel):
    description: str
    schema_: Schema21 = Field(..., alias='schema')


class Responses19(BaseModel):
    field_200: Field20019 = Field(..., alias='200')


class Parameter15(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete3(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses19
    security: List
    tags: List[str]
    parameters: List[Parameter15]


class FieldIdentityProvidersId(BaseModel):
    get: Get8
    post: Post6
    delete: Delete3


class Schema27(BaseModel):
    type: str
    items: Items3


class Field20020(BaseModel):
    description: str
    schema_: Schema27 = Field(..., alias='schema')


class Responses20(BaseModel):
    field_200: Field20020 = Field(..., alias='200')


class Get9(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses20
    security: List
    tags: List[str]
    parameters: List


class Schema28(BaseModel):
    type: str
    items: Items3


class Field20021(BaseModel):
    description: str
    schema_: Schema28 = Field(..., alias='schema')


class Responses21(BaseModel):
    field_200: Field20021 = Field(..., alias='200')


class Schema29(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Parameter16(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema29 = Field(..., alias='schema')


class Post7(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses21
    security: List
    tags: List[str]
    parameters: List[Parameter16]


class FieldPermissions(BaseModel):
    get: Get9
    post: Post7


class Field20022(BaseModel):
    description: str
    schema_: Schema29 = Field(..., alias='schema')


class Responses22(BaseModel):
    field_200: Field20022 = Field(..., alias='200')


class Parameter17(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get10(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses22
    security: List
    tags: List[str]
    parameters: List[Parameter17]


class Field20023(BaseModel):
    description: str
    schema_: Schema29 = Field(..., alias='schema')


class Responses23(BaseModel):
    field_200: Field20023 = Field(..., alias='200')


class Parameter18(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema29] = Field(None, alias='schema')


class Post8(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses23
    security: List
    tags: List[str]
    parameters: List[Parameter18]


class Field20024(BaseModel):
    description: str
    schema_: Schema29 = Field(..., alias='schema')


class Responses24(BaseModel):
    field_200: Field20024 = Field(..., alias='200')


class Parameter19(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete4(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses24
    security: List
    tags: List[str]
    parameters: List[Parameter19]


class FieldPermissionsId(BaseModel):
    get: Get10
    post: Post8
    delete: Delete4


class Schema34(BaseModel):
    type: str
    items: Items3


class Field20025(BaseModel):
    description: str
    schema_: Schema34 = Field(..., alias='schema')


class Responses25(BaseModel):
    field_200: Field20025 = Field(..., alias='200')


class Get11(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses25
    security: List
    tags: List[str]
    parameters: List


class Schema35(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20026(BaseModel):
    description: str
    schema_: Schema35 = Field(..., alias='schema')


class Responses26(BaseModel):
    field_200: Field20026 = Field(..., alias='200')


class Parameter20(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema35 = Field(..., alias='schema')


class Post9(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses26
    security: List
    tags: List[str]
    parameters: List[Parameter20]


class FieldRealms(BaseModel):
    get: Get11
    post: Post9


class Field20027(BaseModel):
    description: str
    schema_: Schema35 = Field(..., alias='schema')


class Responses27(BaseModel):
    field_200: Field20027 = Field(..., alias='200')


class Parameter21(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get12(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses27
    security: List
    tags: List[str]
    parameters: List[Parameter21]


class Field20028(BaseModel):
    description: str
    schema_: Schema35 = Field(..., alias='schema')


class Responses28(BaseModel):
    field_200: Field20028 = Field(..., alias='200')


class Parameter22(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema35] = Field(None, alias='schema')


class Post10(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses28
    security: List
    tags: List[str]
    parameters: List[Parameter22]


class Field20029(BaseModel):
    description: str
    schema_: Schema35 = Field(..., alias='schema')


class Responses29(BaseModel):
    field_200: Field20029 = Field(..., alias='200')


class Parameter23(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete5(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses29
    security: List
    tags: List[str]
    parameters: List[Parameter23]


class FieldRealmsId(BaseModel):
    get: Get12
    post: Post10
    delete: Delete5


class Field20030(BaseModel):
    description: str
    schema_: Schema35 = Field(..., alias='schema')


class Responses30(BaseModel):
    field_200: Field20030 = Field(..., alias='200')


class Get13(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses30
    security: List
    tags: List[str]
    parameters: List[Parameter23]


class FieldRealmsIdWellKnownOpenidConfiguration(BaseModel):
    get: Get13


class Schema42(BaseModel):
    type: str
    items: Items3


class Field20031(BaseModel):
    description: str
    schema_: Schema42 = Field(..., alias='schema')


class Responses31(BaseModel):
    field_200: Field20031 = Field(..., alias='200')


class Get14(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses31
    security: List
    tags: List[str]
    parameters: List[Parameter23]


class FieldRealmsIdJwks(BaseModel):
    get: Get14


class Schema43(BaseModel):
    type: str
    items: Items3


class Field20032(BaseModel):
    description: str
    schema_: Schema43 = Field(..., alias='schema')


class Responses32(BaseModel):
    field_200: Field20032 = Field(..., alias='200')


class Get15(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses32
    security: List
    tags: List[str]
    parameters: List


class Schema44(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20033(BaseModel):
    description: str
    schema_: Schema44 = Field(..., alias='schema')


class Responses33(BaseModel):
    field_200: Field20033 = Field(..., alias='200')


class Parameter26(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema44 = Field(..., alias='schema')


class Post11(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses33
    security: List
    tags: List[str]
    parameters: List[Parameter26]


class FieldRoles(BaseModel):
    get: Get15
    post: Post11


class Field20034(BaseModel):
    description: str
    schema_: Schema44 = Field(..., alias='schema')


class Responses34(BaseModel):
    field_200: Field20034 = Field(..., alias='200')


class Parameter27(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get16(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses34
    security: List
    tags: List[str]
    parameters: List[Parameter27]


class Field20035(BaseModel):
    description: str
    schema_: Schema44 = Field(..., alias='schema')


class Responses35(BaseModel):
    field_200: Field20035 = Field(..., alias='200')


class Parameter28(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema44] = Field(None, alias='schema')


class Post12(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses35
    security: List
    tags: List[str]
    parameters: List[Parameter28]


class Field20036(BaseModel):
    description: str
    schema_: Schema44 = Field(..., alias='schema')


class Responses36(BaseModel):
    field_200: Field20036 = Field(..., alias='200')


class Parameter29(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete6(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses36
    security: List
    tags: List[str]
    parameters: List[Parameter29]


class FieldRolesId(BaseModel):
    get: Get16
    post: Post12
    delete: Delete6


class Schema50(BaseModel):
    type: str
    items: Items3


class Field20037(BaseModel):
    description: str
    schema_: Schema50 = Field(..., alias='schema')


class Responses37(BaseModel):
    field_200: Field20037 = Field(..., alias='200')


class Get17(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses37
    security: List
    tags: List[str]
    parameters: List


class Schema51(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20038(BaseModel):
    description: str
    schema_: Schema51 = Field(..., alias='schema')


class Responses38(BaseModel):
    field_200: Field20038 = Field(..., alias='200')


class Parameter30(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema51 = Field(..., alias='schema')


class Post13(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses38
    security: List
    tags: List[str]
    parameters: List[Parameter30]


class FieldRolePermissions(BaseModel):
    get: Get17
    post: Post13


class Field20039(BaseModel):
    description: str
    schema_: Schema51 = Field(..., alias='schema')


class Responses39(BaseModel):
    field_200: Field20039 = Field(..., alias='200')


class Parameter31(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get18(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses39
    security: List
    tags: List[str]
    parameters: List[Parameter31]


class Field20040(BaseModel):
    description: str
    schema_: Schema51 = Field(..., alias='schema')


class Responses40(BaseModel):
    field_200: Field20040 = Field(..., alias='200')


class Delete7(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses40
    security: List
    tags: List[str]
    parameters: List[Parameter31]


class FieldRolePermissionsId(BaseModel):
    get: Get18
    delete: Delete7


class Schema55(BaseModel):
    type: str
    items: Items3


class Field20041(BaseModel):
    description: str
    schema_: Schema55 = Field(..., alias='schema')


class Responses41(BaseModel):
    field_200: Field20041 = Field(..., alias='200')


class Get19(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses41
    security: List
    tags: List[str]
    parameters: List


class Schema56(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20042(BaseModel):
    description: str
    schema_: Schema56 = Field(..., alias='schema')


class Responses42(BaseModel):
    field_200: Field20042 = Field(..., alias='200')


class Parameter33(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema56 = Field(..., alias='schema')


class Post14(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses42
    security: List
    tags: List[str]
    parameters: List[Parameter33]


class FieldScopes(BaseModel):
    get: Get19
    post: Post14


class Field20043(BaseModel):
    description: str
    schema_: Schema56 = Field(..., alias='schema')


class Responses43(BaseModel):
    field_200: Field20043 = Field(..., alias='200')


class Parameter34(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get20(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses43
    security: List
    tags: List[str]
    parameters: List[Parameter34]


class Field20044(BaseModel):
    description: str
    schema_: Schema56 = Field(..., alias='schema')


class Responses44(BaseModel):
    field_200: Field20044 = Field(..., alias='200')


class Parameter35(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema56] = Field(None, alias='schema')


class Post15(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses44
    security: List
    tags: List[str]
    parameters: List[Parameter35]


class Field20045(BaseModel):
    description: str
    schema_: Schema56 = Field(..., alias='schema')


class Responses45(BaseModel):
    field_200: Field20045 = Field(..., alias='200')


class Parameter36(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete8(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses45
    security: List
    tags: List[str]
    parameters: List[Parameter36]


class FieldScopesId(BaseModel):
    get: Get20
    post: Post15
    delete: Delete8


class Schema62(BaseModel):
    type: str
    items: Items3


class Field20046(BaseModel):
    description: str
    schema_: Schema62 = Field(..., alias='schema')


class Responses46(BaseModel):
    field_200: Field20046 = Field(..., alias='200')


class Get21(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses46
    security: List
    tags: List[str]
    parameters: List


class Schema63(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20047(BaseModel):
    description: str
    schema_: Schema63 = Field(..., alias='schema')


class Responses47(BaseModel):
    field_200: Field20047 = Field(..., alias='200')


class Parameter37(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema63 = Field(..., alias='schema')


class Post16(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses47
    security: List
    tags: List[str]
    parameters: List[Parameter37]


class FieldUsers(BaseModel):
    get: Get21
    post: Post16


class Field20048(BaseModel):
    description: str
    schema_: Schema63 = Field(..., alias='schema')


class Responses48(BaseModel):
    field_200: Field20048 = Field(..., alias='200')


class Parameter38(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get22(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses48
    security: List
    tags: List[str]
    parameters: List[Parameter38]


class Field20049(BaseModel):
    description: str
    schema_: Schema63 = Field(..., alias='schema')


class Responses49(BaseModel):
    field_200: Field20049 = Field(..., alias='200')


class Parameter39(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema63] = Field(None, alias='schema')


class Post17(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses49
    security: List
    tags: List[str]
    parameters: List[Parameter39]


class Field20050(BaseModel):
    description: str
    schema_: Schema63 = Field(..., alias='schema')


class Responses50(BaseModel):
    field_200: Field20050 = Field(..., alias='200')


class Parameter40(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete9(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses50
    security: List
    tags: List[str]
    parameters: List[Parameter40]


class FieldUsersId(BaseModel):
    get: Get22
    post: Post17
    delete: Delete9


class Schema69(BaseModel):
    type: str
    items: Items3


class Field20051(BaseModel):
    description: str
    schema_: Schema69 = Field(..., alias='schema')


class Responses51(BaseModel):
    field_200: Field20051 = Field(..., alias='200')


class Get23(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses51
    security: List
    tags: List[str]
    parameters: List


class Schema70(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20052(BaseModel):
    description: str
    schema_: Schema70 = Field(..., alias='schema')


class Responses52(BaseModel):
    field_200: Field20052 = Field(..., alias='200')


class Parameter41(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema70 = Field(..., alias='schema')


class Post18(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses52
    security: List
    tags: List[str]
    parameters: List[Parameter41]


class FieldUserRoles(BaseModel):
    get: Get23
    post: Post18


class Field20053(BaseModel):
    description: str
    schema_: Schema70 = Field(..., alias='schema')


class Responses53(BaseModel):
    field_200: Field20053 = Field(..., alias='200')


class Parameter42(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get24(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses53
    security: List
    tags: List[str]
    parameters: List[Parameter42]


class Field20054(BaseModel):
    description: str
    schema_: Schema70 = Field(..., alias='schema')


class Responses54(BaseModel):
    field_200: Field20054 = Field(..., alias='200')


class Delete10(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses54
    security: List
    tags: List[str]
    parameters: List[Parameter42]


class FieldUserRolesId(BaseModel):
    get: Get24
    delete: Delete10


class Schema74(BaseModel):
    properties: Dict[str, Any]
    additionalProperties: AdditionalProperties
    type: str


class Field20055(BaseModel):
    description: str
    schema_: Schema74 = Field(..., alias='schema')


class Responses55(BaseModel):
    field_200: Field20055 = Field(..., alias='200')


class Get25(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses55
    security: List
    tags: List[str]
    parameters: List


class Schema75(BaseModel):
    properties: Dict[str, Any]
    additionalProperties: AdditionalProperties
    type: str


class Field20056(BaseModel):
    description: str
    schema_: Schema75 = Field(..., alias='schema')


class Responses56(BaseModel):
    field_200: Field20056 = Field(..., alias='200')


class Post19(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses56
    security: List
    tags: List[str]
    parameters: List


class FieldTokenIntrospect(BaseModel):
    get: Get25
    post: Post19


class Schema76(BaseModel):
    type: str
    items: Items3


class Field20057(BaseModel):
    description: str
    schema_: Schema76 = Field(..., alias='schema')


class Responses57(BaseModel):
    field_200: Field20057 = Field(..., alias='200')


class Post20(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses57
    security: List
    tags: List[str]
    parameters: List


class FieldToken(BaseModel):
    post: Post20


class Schema77(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20058(BaseModel):
    description: str
    schema_: Schema77 = Field(..., alias='schema')


class Responses58(BaseModel):
    field_200: Field20058 = Field(..., alias='200')


class Get26(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses58
    security: List
    tags: List[str]
    parameters: List


class FieldModel(BaseModel):
    get: Get26


class Field204(BaseModel):
    description: str


class Responses59(BaseModel):
    field_204: Field204 = Field(..., alias='204')


class Post21(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses59
    security: List
    tags: List[str]
    parameters: List


class FieldAuthorize(BaseModel):
    post: Post21


class Schema78(BaseModel):
    type: str
    items: Items3


class Field20059(BaseModel):
    description: str
    schema_: Schema78 = Field(..., alias='schema')


class Responses60(BaseModel):
    field_200: Field20059 = Field(..., alias='200')


class Get27(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses60
    security: List
    tags: List[str]
    parameters: List


class FieldWellKnownOpenidConfiguration(BaseModel):
    get: Get27


class Schema79(BaseModel):
    type: str
    items: Items3


class Field20060(BaseModel):
    description: str
    schema_: Schema79 = Field(..., alias='schema')


class Responses61(BaseModel):
    field_200: Field20060 = Field(..., alias='200')


class Get28(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses61
    security: List
    tags: List[str]
    parameters: List


class FieldJwks(BaseModel):
    get: Get28


class Schema80(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20061(BaseModel):
    description: str
    schema_: Schema80 = Field(..., alias='schema')


class Responses62(BaseModel):
    field_200: Field20061 = Field(..., alias='200')


class Get29(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses62
    security: List
    tags: List[str]
    parameters: List[Parameter42]


class FieldJwksId(BaseModel):
    get: Get29


class Responses63(BaseModel):
    field_204: Field204 = Field(..., alias='204')


class Post22(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses63
    security: List
    tags: List[str]
    parameters: List


class FieldActivate(BaseModel):
    post: Post22


class Responses64(BaseModel):
    field_204: Field204 = Field(..., alias='204')


class Post23(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses64
    security: List
    tags: List[str]
    parameters: List


class FieldRegister(BaseModel):
    post: Post23


class Responses65(BaseModel):
    field_204: Field204 = Field(..., alias='204')


class Post24(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses65
    security: List
    tags: List[str]
    parameters: List


class FieldPasswordForgot(BaseModel):
    post: Post24


class Responses66(BaseModel):
    field_204: Field204 = Field(..., alias='204')


class Post25(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses66
    security: List
    tags: List[str]
    parameters: List


class FieldPasswordReset(BaseModel):
    post: Post25


class Schema81(BaseModel):
    type: str
    items: Items3


class Field20062(BaseModel):
    description: str
    schema_: Schema81 = Field(..., alias='schema')


class Responses67(BaseModel):
    field_200: Field20062 = Field(..., alias='200')


class Get30(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses67
    security: List
    tags: List[str]
    parameters: List


class Schema82(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20063(BaseModel):
    description: str
    schema_: Schema82 = Field(..., alias='schema')


class Responses68(BaseModel):
    field_200: Field20063 = Field(..., alias='200')


class Parameter45(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema82 = Field(..., alias='schema')


class Post26(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses68
    security: List
    tags: List[str]
    parameters: List[Parameter45]


class FieldRobotPermissions(BaseModel):
    get: Get30
    post: Post26


class Field20064(BaseModel):
    description: str
    schema_: Schema82 = Field(..., alias='schema')


class Responses69(BaseModel):
    field_200: Field20064 = Field(..., alias='200')


class Parameter46(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get31(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses69
    security: List
    tags: List[str]
    parameters: List[Parameter46]


class Field20065(BaseModel):
    description: str
    schema_: Schema82 = Field(..., alias='schema')


class Responses70(BaseModel):
    field_200: Field20065 = Field(..., alias='200')


class Delete11(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses70
    security: List
    tags: List[str]
    parameters: List[Parameter46]


class FieldRobotPermissionsId(BaseModel):
    get: Get31
    delete: Delete11


class Schema86(BaseModel):
    type: str
    items: Items3


class Field20066(BaseModel):
    description: str
    schema_: Schema86 = Field(..., alias='schema')


class Responses71(BaseModel):
    field_200: Field20066 = Field(..., alias='200')


class Get32(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses71
    security: List
    tags: List[str]
    parameters: List


class Schema87(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20067(BaseModel):
    description: str
    schema_: Schema87 = Field(..., alias='schema')


class Responses72(BaseModel):
    field_200: Field20067 = Field(..., alias='200')


class Parameter48(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema87 = Field(..., alias='schema')


class Post27(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses72
    security: List
    tags: List[str]
    parameters: List[Parameter48]


class FieldRobotRoles(BaseModel):
    get: Get32
    post: Post27


class Field20068(BaseModel):
    description: str
    schema_: Schema87 = Field(..., alias='schema')


class Responses73(BaseModel):
    field_200: Field20068 = Field(..., alias='200')


class Parameter49(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get33(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses73
    security: List
    tags: List[str]
    parameters: List[Parameter49]


class Field20069(BaseModel):
    description: str
    schema_: Schema87 = Field(..., alias='schema')


class Responses74(BaseModel):
    field_200: Field20069 = Field(..., alias='200')


class Delete12(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses74
    security: List
    tags: List[str]
    parameters: List[Parameter49]


class FieldRobotRolesId(BaseModel):
    get: Get33
    delete: Delete12


class Schema91(BaseModel):
    type: str
    items: Items3


class Field20070(BaseModel):
    description: str
    schema_: Schema91 = Field(..., alias='schema')


class Responses75(BaseModel):
    field_200: Field20070 = Field(..., alias='200')


class Get34(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses75
    security: List
    tags: List[str]
    parameters: List


class Schema92(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20071(BaseModel):
    description: str
    schema_: Schema92 = Field(..., alias='schema')


class Responses76(BaseModel):
    field_200: Field20071 = Field(..., alias='200')


class Parameter51(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema92 = Field(..., alias='schema')


class Post28(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses76
    security: List
    tags: List[str]
    parameters: List[Parameter51]


class FieldUserPermissions(BaseModel):
    get: Get34
    post: Post28


class Field20072(BaseModel):
    description: str
    schema_: Schema92 = Field(..., alias='schema')


class Responses77(BaseModel):
    field_200: Field20072 = Field(..., alias='200')


class Parameter52(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get35(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses77
    security: List
    tags: List[str]
    parameters: List[Parameter52]


class Field20073(BaseModel):
    description: str
    schema_: Schema92 = Field(..., alias='schema')


class Responses78(BaseModel):
    field_200: Field20073 = Field(..., alias='200')


class Delete13(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses78
    security: List
    tags: List[str]
    parameters: List[Parameter52]


class FieldUserPermissionsId(BaseModel):
    get: Get35
    delete: Delete13


class Schema96(BaseModel):
    type: str
    items: Items3


class Field20074(BaseModel):
    description: str
    schema_: Schema96 = Field(..., alias='schema')


class Responses79(BaseModel):
    field_200: Field20074 = Field(..., alias='200')


class Get36(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses79
    security: List
    tags: List[str]
    parameters: List


class Schema97(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20075(BaseModel):
    description: str
    schema_: Schema97 = Field(..., alias='schema')


class Responses80(BaseModel):
    field_200: Field20075 = Field(..., alias='200')


class Parameter54(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema97 = Field(..., alias='schema')


class Post29(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses80
    security: List
    tags: List[str]
    parameters: List[Parameter54]


class FieldRoleAttributes(BaseModel):
    get: Get36
    post: Post29


class Field20076(BaseModel):
    description: str
    schema_: Schema97 = Field(..., alias='schema')


class Responses81(BaseModel):
    field_200: Field20076 = Field(..., alias='200')


class Parameter55(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get37(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses81
    security: List
    tags: List[str]
    parameters: List[Parameter55]


class Field20077(BaseModel):
    description: str
    schema_: Schema97 = Field(..., alias='schema')


class Responses82(BaseModel):
    field_200: Field20077 = Field(..., alias='200')


class Parameter56(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema97] = Field(None, alias='schema')


class Post30(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses82
    security: List
    tags: List[str]
    parameters: List[Parameter56]


class Field20078(BaseModel):
    description: str
    schema_: Schema97 = Field(..., alias='schema')


class Responses83(BaseModel):
    field_200: Field20078 = Field(..., alias='200')


class Parameter57(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete14(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses83
    security: List
    tags: List[str]
    parameters: List[Parameter57]


class FieldRoleAttributesId(BaseModel):
    get: Get37
    post: Post30
    delete: Delete14


class Schema103(BaseModel):
    type: str
    items: Items3


class Field20079(BaseModel):
    description: str
    schema_: Schema103 = Field(..., alias='schema')


class Responses84(BaseModel):
    field_200: Field20079 = Field(..., alias='200')


class Get38(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses84
    security: List
    tags: List[str]
    parameters: List


class Schema104(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20080(BaseModel):
    description: str
    schema_: Schema104 = Field(..., alias='schema')


class Responses85(BaseModel):
    field_200: Field20080 = Field(..., alias='200')


class Parameter58(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema104 = Field(..., alias='schema')


class Post31(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses85
    security: List
    tags: List[str]
    parameters: List[Parameter58]


class FieldUserAttributes(BaseModel):
    get: Get38
    post: Post31


class Field20081(BaseModel):
    description: str
    schema_: Schema104 = Field(..., alias='schema')


class Responses86(BaseModel):
    field_200: Field20081 = Field(..., alias='200')


class Parameter59(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get39(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses86
    security: List
    tags: List[str]
    parameters: List[Parameter59]


class Field20082(BaseModel):
    description: str
    schema_: Schema104 = Field(..., alias='schema')


class Responses87(BaseModel):
    field_200: Field20082 = Field(..., alias='200')


class Parameter60(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema104] = Field(None, alias='schema')


class Post32(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses87
    security: List
    tags: List[str]
    parameters: List[Parameter60]


class Field20083(BaseModel):
    description: str
    schema_: Schema104 = Field(..., alias='schema')


class Responses88(BaseModel):
    field_200: Field20083 = Field(..., alias='200')


class Parameter61(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete15(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses88
    security: List
    tags: List[str]
    parameters: List[Parameter61]


class FieldUserAttributesId(BaseModel):
    get: Get39
    post: Post32
    delete: Delete15


class Schema110(BaseModel):
    type: str
    items: Items3


class Field20084(BaseModel):
    description: str
    schema_: Schema110 = Field(..., alias='schema')


class Responses89(BaseModel):
    field_200: Field20084 = Field(..., alias='200')


class Get40(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses89
    security: List
    tags: List[str]
    parameters: List


class Schema111(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20085(BaseModel):
    description: str
    schema_: Schema111 = Field(..., alias='schema')


class Responses90(BaseModel):
    field_200: Field20085 = Field(..., alias='200')


class Parameter62(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema111 = Field(..., alias='schema')


class Post33(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses90
    security: List
    tags: List[str]
    parameters: List[Parameter62]


class FieldClients(BaseModel):
    get: Get40
    post: Post33


class Field20086(BaseModel):
    description: str
    schema_: Schema111 = Field(..., alias='schema')


class Responses91(BaseModel):
    field_200: Field20086 = Field(..., alias='200')


class Parameter63(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Get41(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses91
    security: List
    tags: List[str]
    parameters: List[Parameter63]


class Field20087(BaseModel):
    description: str
    schema_: Schema111 = Field(..., alias='schema')


class Responses92(BaseModel):
    field_200: Field20087 = Field(..., alias='200')


class Parameter64(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: Optional[str] = None
    schema_: Optional[Schema111] = Field(None, alias='schema')


class Post34(BaseModel):
    operationId: str
    consumes: List[str]
    produces: List[str]
    responses: Responses92
    security: List
    tags: List[str]
    parameters: List[Parameter64]


class Field20088(BaseModel):
    description: str
    schema_: Schema111 = Field(..., alias='schema')


class Responses93(BaseModel):
    field_200: Field20088 = Field(..., alias='200')


class Parameter65(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str


class Delete16(BaseModel):
    operationId: str
    consumes: List
    produces: List[str]
    responses: Responses93
    security: List
    tags: List[str]
    parameters: List[Parameter65]


class FieldClientsId(BaseModel):
    get: Get41
    post: Post34
    delete: Delete16


class Paths(BaseModel):
    field_client_scopes: FieldClientScopes = Field(..., alias='/client-scopes')
    field_client_scopes__id_: FieldClientScopesId = Field(
        ..., alias='/client-scopes/{id}'
    )
    field_robots: FieldRobots = Field(..., alias='/robots')
    field_robots__id__integrity: FieldRobotsIdIntegrity = Field(
        ..., alias='/robots/{id}/integrity'
    )
    field_robots__id_: FieldRobotsId = Field(..., alias='/robots/{id}')
    field_identity_provider_roles: FieldIdentityProviderRoles = Field(
        ..., alias='/identity-provider-roles'
    )
    field_identity_provider_roles__id_: FieldIdentityProviderRolesId = Field(
        ..., alias='/identity-provider-roles/{id}'
    )
    field_identity_providers: FieldIdentityProviders = Field(
        ..., alias='/identity-providers'
    )
    field_identity_providers__id_: FieldIdentityProvidersId = Field(
        ..., alias='/identity-providers/{id}'
    )
    field_permissions: FieldPermissions = Field(..., alias='/permissions')
    field_permissions__id_: FieldPermissionsId = Field(..., alias='/permissions/{id}')
    field_realms: FieldRealms = Field(..., alias='/realms')
    field_realms__id_: FieldRealmsId = Field(..., alias='/realms/{id}')
    field_realms__id___well_known_openid_configuration: FieldRealmsIdWellKnownOpenidConfiguration = Field(
        ..., alias='/realms/{id}/.well-known/openid-configuration'
    )
    field_realms__id__jwks: FieldRealmsIdJwks = Field(..., alias='/realms/{id}/jwks')
    field_roles: FieldRoles = Field(..., alias='/roles')
    field_roles__id_: FieldRolesId = Field(..., alias='/roles/{id}')
    field_role_permissions: FieldRolePermissions = Field(..., alias='/role-permissions')
    field_role_permissions__id_: FieldRolePermissionsId = Field(
        ..., alias='/role-permissions/{id}'
    )
    field_scopes: FieldScopes = Field(..., alias='/scopes')
    field_scopes__id_: FieldScopesId = Field(..., alias='/scopes/{id}')
    field_users: FieldUsers = Field(..., alias='/users')
    field_users__id_: FieldUsersId = Field(..., alias='/users/{id}')
    field_user_roles: FieldUserRoles = Field(..., alias='/user-roles')
    field_user_roles__id_: FieldUserRolesId = Field(..., alias='/user-roles/{id}')
    field_token_introspect: FieldTokenIntrospect = Field(..., alias='/token/introspect')
    field_token: FieldToken = Field(..., alias='/token')
    field_: FieldModel = Field(..., alias='/')
    field_authorize: FieldAuthorize = Field(..., alias='/authorize')
    field__well_known_openid_configuration: FieldWellKnownOpenidConfiguration = Field(
        ..., alias='/.well-known/openid-configuration'
    )
    field_jwks: FieldJwks = Field(..., alias='/jwks')
    field_jwks__id_: FieldJwksId = Field(..., alias='/jwks/{id}')
    field_activate: FieldActivate = Field(..., alias='/activate')
    field_register: FieldRegister = Field(..., alias='/register')
    field_password_forgot: FieldPasswordForgot = Field(..., alias='/password-forgot')
    field_password_reset: FieldPasswordReset = Field(..., alias='/password-reset')
    field_robot_permissions: FieldRobotPermissions = Field(
        ..., alias='/robot-permissions'
    )
    field_robot_permissions__id_: FieldRobotPermissionsId = Field(
        ..., alias='/robot-permissions/{id}'
    )
    field_robot_roles: FieldRobotRoles = Field(..., alias='/robot-roles')
    field_robot_roles__id_: FieldRobotRolesId = Field(..., alias='/robot-roles/{id}')
    field_user_permissions: FieldUserPermissions = Field(..., alias='/user-permissions')
    field_user_permissions__id_: FieldUserPermissionsId = Field(
        ..., alias='/user-permissions/{id}'
    )
    field_role_attributes: FieldRoleAttributes = Field(..., alias='/role-attributes')
    field_role_attributes__id_: FieldRoleAttributesId = Field(
        ..., alias='/role-attributes/{id}'
    )
    field_user_attributes: FieldUserAttributes = Field(..., alias='/user-attributes')
    field_user_attributes__id_: FieldUserAttributesId = Field(
        ..., alias='/user-attributes/{id}'
    )
    field_clients: FieldClients = Field(..., alias='/clients')
    field_clients__id_: FieldClientsId = Field(..., alias='/clients/{id}')


class Bearer(BaseModel):
    name: str
    type: str
    in_: str = Field(..., alias='in')


class Oauth2Implicit(BaseModel):
    type: str
    flow: str
    tokenUrl: str


class BasicAuth(BaseModel):
    type: str


class SecurityDefinitions(BaseModel):
    bearer: Bearer
    oauth2Implicit: Oauth2Implicit
    basicAuth: BasicAuth


class Model(BaseModel):
    definitions: Definitions
    info: Info
    paths: Paths
    swagger: str
    securityDefinitions: SecurityDefinitions
    consumes: List[str]
    produces: List[str]
    host: str
    basePath: str
